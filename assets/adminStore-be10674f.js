import{B as i,C as E,r as n,b as M,s as w,g as j}from"./index-ba497632.js";import{u as k}from"./orderStore-d52bf467.js";const p={async getProducts(){try{return(await i.get("/admin/products/")).data.data.products}catch(s){throw s.response.data}},async getAdminOrders(){try{return(await i.get("/admin/orders/")).data}catch(s){throw s.response.data}},async postProduct(s){try{const r=await i.post("/admin/products/",s),{message:t}=r.data;return{...r.data.data,message:t}}catch(r){throw r.response.data}},async updateProduct({productId:s,formData:r}){try{const t=await i.put(`/admin/products/${s}`,r),{message:c}=t.data;return{...t.data.data,message:c}}catch(t){throw t.response.data}},async updateProductStatus(s,r){try{return(await i.patch(`/admin/products/${s}?active=${r}`)).data.data}catch(t){throw t.response.data}},async deleteProduct(s){try{return(await i.delete(`/admin/products/${s}`)).data}catch(r){throw r.response.data}}},x=E("admin",()=>{const{showAlert:s}=j(),r=n(!1),t=n([]),c=n([]),m=n("addItem"),g=n(null),h=n(null),v=n(null),P=M(),A=k(),{isProcessing:l,isLoading:I}=w(P),{orders:S}=w(A),u=n({name:"",description:"",image:"",categoryId:"",price:"",active:!0}),O=async()=>{try{const a=await p.getProducts();t.value=[],c.value=[],a.forEach(e=>{e.active?t.value.push(e):c.value.push(e)})}catch(a){throw a.message}finally{I.value=!1}},$=async a=>{try{const e=new FormData(a);if(l.value=!0,m.value==="addItem"){const{product:o,message:d}=await p.postProduct(e);o&&(s("success",d).then(()=>{t.value=[o,...t.value]}),y())}else{const{product:o,message:d}=await p.updateProduct({productId:v.value.id,formData:e});o&&(s("success",d).then(()=>{t.value=t.value.map(f=>f.id===o.id?o:f)}),y())}}catch(e){throw{code:e.code,message:e.message}}finally{l.value=!1}},b=async(a,e)=>{try{l.value=!0;const{product:o}=await p.updateProductStatus(a,!e);e?(c.value.push(o),t.value=t.value.filter(d=>d.id!==a)):(t.value.push(o),c.value=c.value.filter(d=>d.id!==a))}catch(o){throw{code:o.code,message:o.message}}finally{l.value=!1}},D=async a=>{try{l.value=!0,await p.deleteProduct(a),c.value=c.value.filter(e=>e.id!==a)}catch(e){g.value=e.message}finally{l.value=!1}},y=a=>{r.value=!r.value,r.value&&a?(m.value="updateItem",v.value=t.value.find(e=>e.id===a),Object.keys(u.value).forEach(e=>e==="categoryId"?u.value[e]=v.value.category.id:u.value[e]=v.value[e])):(m.value="addItem",Object.keys(u.value).forEach(e=>e==="categoryId"?u.value[e]=h:u.value[e]=null))};return{showItemModal:r,activeProducts:t,nonActiveProducts:c,errorMessage:g,initialCategory:h,updateProduct:v,modalType:m,formData:u,getItems:O,addOrUpdateItem:$,toggleActive:b,deleteItem:D,toggleModal:y,getAdminOrders:async()=>{try{const a=await p.getAdminOrders();return a.status==="success"&&(S.value=a.data.orders),a}catch(a){g.value=a.message}}}});export{x as u};
